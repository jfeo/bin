#!/bin/bash
#
# Script that outputs JSON data for i3bar.
#

# Given a current value $1, a degraded boundary $2 and a critical boundary $3,
# return normal, degraded or critical colours depending on the current value.
function get_color {
  if [ $1 -gt $2 ]; then
    echo "#2575EE"
  elif [ $1 -gt $3 ]; then
    echo "#BBAA10"
  else
    echo "#CC4060"
  fi
}

# Given a current value, and three boundary values, returns one of the 4 given
# icons, depending on the relationship between the current value $1 and the boundary
# values $2, $3 and $4. It is assumed that $2 > $3 > $4.
function get_icon {
  if [ "$1" -gt "$2" ]; then
    echo "$5"
  elif [ "$1" -gt "$3" ]; then
    echo "$6"
  elif [ "$1" -gt "$4" ]; then
    echo "$7"
  else
    echo "$8"
  fi
}

# Send the header so that i3bar knows we want to use JSON:
echo '{"version":1}'

# Begin the endless array.
echo '['

# We send an empty first array of blocks to make the loop simpler:
echo '[],'

# Fire away the JSON!
while true; do
  #-- Wireless --#
  essid=$(iwconfig wlp4s0 | grep -o -P '(?<=ESSID:)(.*?)(?=\ )')
  if [ "$essid" == "off/any" ] || [ "$essid" == "" ]; then
    iwstr=" disconnected"
    iwclr="#CC4060"
  else
    essid_temp="${essid%\"}"      # remove
    essid_temp="${essid_temp#\"}" # quotes
    iwmax=$(iwconfig wlp4s0 | grep -o -P '(?<=Quality=..\/)(.*?)(?=\ )')
    iwcur=$(iwconfig wlp4s0 | grep -o -P '(?<=Quality=)(.*?)(?=\/)')
    iwpct=$((iwcur * 100 / iwmax))
    iwclr=$(get_color $iwpct 50 25)
    iwstr=" $iwpct% $essid_temp"
  fi
 
  #-- Volume --#
  muted=$(amixer get Master | grep -o -P '\[on]')
  vol=$(amixer get Master | grep -o -P '(?<=\[)(.*?)(?=\%])')
  if [ "$muted" == "[on]" ]; then
    volstr=" $vol%"
    volclr="#000000"
  else
    volstr=""
    volclr="#CC4060"
  fi
  
  #-- Battery --#
  state=$(acpi | grep -o -P '(?<=: )(.*?)(?=\,)')
  if [ "$state" = "Discharging" ]; then
    powico=$(get_icon $pow 90 50 10    )
    powclr=$(get_color $pow 40 16)
    pow=$(acpi | grep -o -P '(?<=\, )(.*?)(?=\%)')
    powstr="$powico $pow%"
  elif [ "$state" = "Charging" ]; then
    powclr="#2575EE"
    pow=$(acpi | grep -o -P '(?<=\, )(.*?)(?=\%)')
    powstr=" $pow%"
  else
    powclr="#2575EE"
    powstr=""
  fi

  #-- Date --#
  date=$(date +"%A %d.%m %H:%M")

  # generate json
  echo '[{"full_text":" '$iwstr' ", "color": "'$iwclr'"},'
  echo  '{"full_text":" '$powstr' ", "color": "'$powclr'" },'
  echo  '{"full_text":" '$volstr' ", "color": "'$volclr'" },'
  echo  '{"full_text":"  '$date' ","color":"#000000"}],'
  sleep 1
done
